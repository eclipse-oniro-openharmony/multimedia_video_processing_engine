# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/video_processing_engine/config.gni")

ohos_executable("vpe_video_nativedemo") {
  include_dirs = [
    "$CAPI_DIR",
    "$VIDEO_PROCESSING_ENGINE_ROOT_DIR/test/moduletest/common",
    "$VIDEO_PROCESSING_ENGINE_ROOT_DIR/../../../graphic/graphic_2d/interfaces/inner_api",
    "$VIDEO_PROCESSING_ENGINE_ROOT_DIR/../../../window/window_manager/interfaces/innerkits"
  ]

  cflags = [
    "-Wall",
    "-fno-rtti",
    "-fno-exceptions",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wdate-time",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wno-unused-parameter",
    "-Wno-deprecated-declarations",
  ]

  cflags_cc = cflags
  cflags_cc += [ "-std=c++17" ]

  sources = [
    "video_processing_demo.cpp",
    "../common/yuv_viewer.cpp",
  ]

  deps = [
    "$FRAMEWORK_DIR:video_processing"
  ]

  external_deps = [
    "c_utils:utils",
    "ffmpeg:libohosffmpeg",
    "graphic_2d:libgraphic_utils",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "ipc:ipc_core",
    "media_foundation:media_foundation",
    "media_foundation:native_media_core",
    "window_manager:libwm",
  ]

  install_enable = false

  part_name = "video_processing_engine"
  subsystem_name = "multimedia"
}














video_demo_native_include_dirs = [
  "$vpe_interface_capi_dir",
  "$vpe_capi_root_dir/test/moduletest/common",
  "$vpe_capi_root_dir/../../../graphic/graphic_2d/interfaces/inner_api",
  "$vpe_capi_root_dir/../../../window/window_manager/interfaces/innerkits"
]

video_nativedemo_cflags = [
  "-std=c++17",
  "-fno-rtti",
  "-fno-exceptions",
  "-Wall",
  "-fno-common",
  "-fstack-protector-strong",
  "-Wshadow",
  "-FPIC",
  "-FS",
  "-O2",
  "-D_FORTIFY_SOURCE=2",
  "-fvisibility=hidden",
  "-Wformat=2",
  "-Wdate-time",
  "-Werror",
  "-Wextra",
  "-Wimplicit-fallthrough",
  "-Wsign-compare",
  "-Wunused-parameter",
]

##################################################################################################################
ohos_executable("vpe_video_native_demo") {
  include_dirs = video_demo_native_include_dirs
  include_dirs += [ "./" ]
  cflags = video_nativedemo_cflags

  sources = [
    "video_processing_demo.cpp",
    "../common/yuv_viewer.cpp",
  ]

  deps = [
    "$vpe_capi_root_dir/framework:video_processing"
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:libgraphic_utils",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "hilog:libhilog",
    "ipc:ipc_core",
    "media_foundation:media_foundation",
    "media_foundation:native_media_core",
    "window_manager:libwm",
  ]

  install_enable = false

  part_name = "video_processing_engine"
  subsystem_name = "multimedia"
}
